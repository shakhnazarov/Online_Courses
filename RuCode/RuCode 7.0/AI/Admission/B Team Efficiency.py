n = int(input())
teams = []
for i in range(n):
    n_i = input()
    team = list(map(int, input().split()))
    teams.append(team)

efficiencies = []
for team in teams:
    l, r = 0, len(team)-1
    curr_min, curr_max = 1, len(team)
    efficiency = 0

    while l < r:
        if team[l] == curr_min:
            l = l+1
            curr_min += 1
        elif team[l] == curr_max:
            l = l + 1
            curr_max -= 1
        elif team[r] == curr_min:
            r -= 1
            curr_min += 1
        elif team[r] == curr_max:
            r -= 1
            curr_max -= 1
        else:
            efficiency = r-l
            break
    efficiencies.append(efficiency)

print(*efficiencies)


# ошибается на некоторых тестах






'''
Руководитель компании RuCoding недавно съездил на конференцию руководителей. Там он узнал, что существует методика для оценки эффективности рассадки сотрудников в офисе. Вернувшись с конференции, он решил проверить методику на практике.

Всего в офисе сидят n команд. В i-ой команде находятся
n
i
n
i
​
  разработчиков. Разработчики из одной команды сидят в офисе на одном ряду. Каждый разработчик внутри команды имеет порядковый номер
a
j
a
j
​
  (от 1 до
n
i
n
i
​
 ). Таким образом, рассадку i-ой команды можно представить как перестановку длины
n
i
n
i
​
 .

Чтобы оценить эффективность рассадки, необходимо найти максимальный по длине отрезок, который удовлетворяет следующему условию: ни один из порядковых номеров на концах отрезка не является ни минимумом, ни максимумом всего отрезка.

Другими словами, необходимо найти такие числа
l
l и
r
r (
1
≤
l
≤
r
≤
n
1≤l≤r≤n), что
a
l
≠
min
(
a
l
,
a
l
+
1
,
…
,
a
r
)
a
l
​


=min(a
l
​
 ,a
l+1
​
 ,…,a
r
​
 ),
a
l
≠
max
(
a
l
,
a
l
+
1
,
…
,
a
r
)
a
l
​


=max(a
l
​
 ,a
l+1
​
 ,…,a
r
​
 ) и
a
r
≠
min
(
a
l
,
a
l
+
1
,
…
,
a
r
)
a
r
​


=min(a
l
​
 ,a
l+1
​
 ,…,a
r
​
 ),
a
r
≠
max
(
a
l
,
a
l
+
1
,
…
,
a
r
)
a
r
​


=max(a
l
​
 ,a
l+1
​
 ,…,a
r
​
 ).

Эффективностью команды считается число
E
E равное
r
−
l
r−l. Если же подходящий отрезок не нашёлся, то
E
=
0
E=0.

Поскольку команд в офисе много, глава компании не хочет отвлекать всех сотрудников от работы. К счастью, все данные о рассадке есть в базе данных.

Вас как лучшего разработчика в компании попросили помочь со столь важной задачей. Не откажите родному начальству и оцените эффективность каждой команды в офисе.

Формат ввода
Каждый тест состоит из нескольких наборов входных данных. Первая строка содержит единственное число
n
n (
1
≤
n
≤
1
0
4
1≤n≤10
4
 ) — количество наборов входных данных. Далее следует описание наборов входных данных.

Для каждого набора входных данных в первой строке содержится одно целое число
n
i
n
i
​
  (
1
≤
n
i
≤
2
⋅
1
0
5
1≤n
i
​
 ≤2⋅10
5
 ) — длина перестановки.

Вторая строка содержит
n
i
n
i
​
  различных целых чисел
a
1
,
a
2
,
…
,
a
n
a
1
​
 ,a
2
​
 ,…,a
n
​
  (
1
≤
a
j
≤
n
i
1≤a
j
​
 ≤n
i
​
 ) — элементы перестановки.

Гарантируется, что сумма
n
i
n
i
​
  по всем наборам входных данных не превосходит
2
⋅
1
0
5
2⋅10
5
 .

Формат вывода
Для каждой рассадки выведите её эффективность.
'''